#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReportKCS")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InsertReportKeyIn(ReportKeyIn instance);
  partial void UpdateReportKeyIn(ReportKeyIn instance);
  partial void DeleteReportKeyIn(ReportKeyIn instance);
  partial void InsertSubject(Subject instance);
  partial void UpdateSubject(Subject instance);
  partial void DeleteSubject(Subject instance);
  partial void InsertNews(News instance);
  partial void UpdateNews(News instance);
  partial void DeleteNews(News instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ReportKCSConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ReportKeyIn> ReportKeyIn
	{
		get
		{
			return this.GetTable<ReportKeyIn>();
		}
	}
	
	public System.Data.Linq.Table<Subject> Subject
	{
		get
		{
			return this.GetTable<Subject>();
		}
	}
	
	public System.Data.Linq.Table<News> News
	{
		get
		{
			return this.GetTable<News>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportKeyIn")]
public partial class ReportKeyIn : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ReportKeyInID;
	
	private System.Nullable<int> _SubjectID;
	
	private System.Nullable<long> _Num1;
	
	private System.Nullable<long> _Num2;
	
	private System.Nullable<long> _Num3;
	
	private string _ReportDate;
	
	private string _Type;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportKeyInIDChanging(int value);
    partial void OnReportKeyInIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnNum1Changing(System.Nullable<long> value);
    partial void OnNum1Changed();
    partial void OnNum2Changing(System.Nullable<long> value);
    partial void OnNum2Changed();
    partial void OnNum3Changing(System.Nullable<long> value);
    partial void OnNum3Changed();
    partial void OnReportDateChanging(string value);
    partial void OnReportDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public ReportKeyIn()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportKeyInID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ReportKeyInID
	{
		get
		{
			return this._ReportKeyInID;
		}
		set
		{
			if ((this._ReportKeyInID != value))
			{
				this.OnReportKeyInIDChanging(value);
				this.SendPropertyChanging();
				this._ReportKeyInID = value;
				this.SendPropertyChanged("ReportKeyInID");
				this.OnReportKeyInIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
	public System.Nullable<int> SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num1", DbType="BigInt")]
	public System.Nullable<long> Num1
	{
		get
		{
			return this._Num1;
		}
		set
		{
			if ((this._Num1 != value))
			{
				this.OnNum1Changing(value);
				this.SendPropertyChanging();
				this._Num1 = value;
				this.SendPropertyChanged("Num1");
				this.OnNum1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num2", DbType="BigInt")]
	public System.Nullable<long> Num2
	{
		get
		{
			return this._Num2;
		}
		set
		{
			if ((this._Num2 != value))
			{
				this.OnNum2Changing(value);
				this.SendPropertyChanging();
				this._Num2 = value;
				this.SendPropertyChanged("Num2");
				this.OnNum2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num3", DbType="BigInt")]
	public System.Nullable<long> Num3
	{
		get
		{
			return this._Num3;
		}
		set
		{
			if ((this._Num3 != value))
			{
				this.OnNum3Changing(value);
				this.SendPropertyChanging();
				this._Num3 = value;
				this.SendPropertyChanged("Num3");
				this.OnNum3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="VarChar(50)")]
	public string ReportDate
	{
		get
		{
			return this._ReportDate;
		}
		set
		{
			if ((this._ReportDate != value))
			{
				this.OnReportDateChanging(value);
				this.SendPropertyChanging();
				this._ReportDate = value;
				this.SendPropertyChanged("ReportDate");
				this.OnReportDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SubjectID;
	
	private string _Num;
	
	private string _Code;
	
	private string _Name;
	
	private int _Layer;
	
	private string _Type;
	
	private string _status;
	
	private System.Nullable<int> _SubOrder;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnNumChanging(string value);
    partial void OnNumChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLayerChanging(int value);
    partial void OnLayerChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnSubOrderChanging(System.Nullable<int> value);
    partial void OnSubOrderChanged();
    #endregion
	
	public Subject()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Num
	{
		get
		{
			return this._Num;
		}
		set
		{
			if ((this._Num != value))
			{
				this.OnNumChanging(value);
				this.SendPropertyChanging();
				this._Num = value;
				this.SendPropertyChanged("Num");
				this.OnNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="Int NOT NULL")]
	public int Layer
	{
		get
		{
			return this._Layer;
		}
		set
		{
			if ((this._Layer != value))
			{
				this.OnLayerChanging(value);
				this.SendPropertyChanging();
				this._Layer = value;
				this.SendPropertyChanged("Layer");
				this.OnLayerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubOrder", DbType="Int")]
	public System.Nullable<int> SubOrder
	{
		get
		{
			return this._SubOrder;
		}
		set
		{
			if ((this._SubOrder != value))
			{
				this.OnSubOrderChanging(value);
				this.SendPropertyChanging();
				this._SubOrder = value;
				this.SendPropertyChanged("SubOrder");
				this.OnSubOrderChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NewsID;
	
	private string _NewsType;
	
	private string _NewsContent;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnNewsTypeChanging(string value);
    partial void OnNewsTypeChanged();
    partial void OnNewsContentChanging(string value);
    partial void OnNewsContentChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
	
	public News()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NewsID
	{
		get
		{
			return this._NewsID;
		}
		set
		{
			if ((this._NewsID != value))
			{
				this.OnNewsIDChanging(value);
				this.SendPropertyChanging();
				this._NewsID = value;
				this.SendPropertyChanged("NewsID");
				this.OnNewsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsType", DbType="NVarChar(50)")]
	public string NewsType
	{
		get
		{
			return this._NewsType;
		}
		set
		{
			if ((this._NewsType != value))
			{
				this.OnNewsTypeChanging(value);
				this.SendPropertyChanging();
				this._NewsType = value;
				this.SendPropertyChanged("NewsType");
				this.OnNewsTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsContent", DbType="NVarChar(MAX)")]
	public string NewsContent
	{
		get
		{
			return this._NewsContent;
		}
		set
		{
			if ((this._NewsContent != value))
			{
				this.OnNewsContentChanging(value);
				this.SendPropertyChanging();
				this._NewsContent = value;
				this.SendPropertyChanged("NewsContent");
				this.OnNewsContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
